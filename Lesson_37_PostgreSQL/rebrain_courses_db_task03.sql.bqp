--
-- PostgreSQL database dump
--

-- Dumped from database version 13.2
-- Dumped by pg_dump version 13.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: dup_result; Type: TYPE; Schema: public; Owner: rebrain_admin
--

CREATE TYPE public.dup_result AS (
	f1 integer,
	f2 text
);


ALTER TYPE public.dup_result OWNER TO rebrain_admin;

--
-- Name: add_to_log(); Type: FUNCTION; Schema: public; Owner: rebrain_admin
--

CREATE FUNCTION public.add_to_log() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    mstr varchar(30);
    astr varchar(100);
    retstr varchar(254);
    userid int;
BEGIN
    IF    TG_OP = 'INSERT' THEN
        astr = NEW.username;
        mstr := 'Add new user ';
        retstr := mstr || astr;
        userid = NEW.user_id;
        INSERT INTO auditlog(user_id, creation_time, creator) values (userid, NOW(), user);
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.add_to_log() OWNER TO rebrain_admin;

--
-- Name: dup(integer); Type: FUNCTION; Schema: public; Owner: rebrain_admin
--

CREATE FUNCTION public.dup(integer) RETURNS public.dup_result
    LANGUAGE sql
    AS $_$ SELECT $1, CAST($1 AS text) || ' is text' $_$;


ALTER FUNCTION public.dup(integer) OWNER TO rebrain_admin;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auditlog; Type: TABLE; Schema: public; Owner: rebrain_admin
--

CREATE TABLE public.auditlog (
    id integer NOT NULL,
    user_id integer NOT NULL,
    creation_time timestamp without time zone DEFAULT now() NOT NULL,
    creator character varying(50) NOT NULL
);


ALTER TABLE public.auditlog OWNER TO rebrain_admin;

--
-- Name: auditlog_id_seq; Type: SEQUENCE; Schema: public; Owner: rebrain_admin
--

CREATE SEQUENCE public.auditlog_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.auditlog_id_seq OWNER TO rebrain_admin;

--
-- Name: auditlog_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: rebrain_admin
--

ALTER SEQUENCE public.auditlog_id_seq OWNED BY public.auditlog.id;


--
-- Name: courses; Type: TABLE; Schema: public; Owner: rebrain_admin
--

CREATE TABLE public.courses (
    course_id integer NOT NULL,
    coursename character varying(50) NOT NULL,
    tasks_count integer NOT NULL,
    price integer NOT NULL
);


ALTER TABLE public.courses OWNER TO rebrain_admin;

--
-- Name: courses_course_id_seq; Type: SEQUENCE; Schema: public; Owner: rebrain_admin
--

CREATE SEQUENCE public.courses_course_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.courses_course_id_seq OWNER TO rebrain_admin;

--
-- Name: courses_course_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: rebrain_admin
--

ALTER SEQUENCE public.courses_course_id_seq OWNED BY public.courses.course_id;


--
-- Name: logs; Type: TABLE; Schema: public; Owner: rebrain_admin
--

CREATE TABLE public.logs (
    text text,
    added timestamp without time zone
);


ALTER TABLE public.logs OWNER TO rebrain_admin;

--
-- Name: users; Type: TABLE; Schema: public; Owner: rebrain_admin
--

CREATE TABLE public.users (
    user_id integer NOT NULL,
    username character varying(50) NOT NULL,
    email character varying(50) NOT NULL,
    mobile_phone character varying(12) NOT NULL,
    firstname text NOT NULL,
    lastname text NOT NULL,
    city text,
    is_curator boolean NOT NULL,
    record_date timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.users OWNER TO rebrain_admin;

--
-- Name: users__courses; Type: TABLE; Schema: public; Owner: rebrain_admin
--

CREATE TABLE public.users__courses (
    id integer NOT NULL,
    user_id integer NOT NULL,
    course_id integer NOT NULL
);


ALTER TABLE public.users__courses OWNER TO rebrain_admin;

--
-- Name: users__courses_id_seq; Type: SEQUENCE; Schema: public; Owner: rebrain_admin
--

CREATE SEQUENCE public.users__courses_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users__courses_id_seq OWNER TO rebrain_admin;

--
-- Name: users__courses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: rebrain_admin
--

ALTER SEQUENCE public.users__courses_id_seq OWNED BY public.users__courses.id;


--
-- Name: users_test; Type: TABLE; Schema: public; Owner: rebrain_admin
--

CREATE TABLE public.users_test (
    name text
);


ALTER TABLE public.users_test OWNER TO rebrain_admin;

--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: rebrain_admin
--

CREATE SEQUENCE public.users_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_user_id_seq OWNER TO rebrain_admin;

--
-- Name: users_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: rebrain_admin
--

ALTER SEQUENCE public.users_user_id_seq OWNED BY public.users.user_id;


--
-- Name: auditlog id; Type: DEFAULT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.auditlog ALTER COLUMN id SET DEFAULT nextval('public.auditlog_id_seq'::regclass);


--
-- Name: courses course_id; Type: DEFAULT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.courses ALTER COLUMN course_id SET DEFAULT nextval('public.courses_course_id_seq'::regclass);


--
-- Name: users user_id; Type: DEFAULT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.users ALTER COLUMN user_id SET DEFAULT nextval('public.users_user_id_seq'::regclass);


--
-- Name: users__courses id; Type: DEFAULT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.users__courses ALTER COLUMN id SET DEFAULT nextval('public.users__courses_id_seq'::regclass);


--
-- Data for Name: auditlog; Type: TABLE DATA; Schema: public; Owner: rebrain_admin
--

COPY public.auditlog (id, user_id, creation_time, creator) FROM stdin;
1	12	2021-04-04 19:53:56.59149	rebrain_admin
\.


--
-- Data for Name: courses; Type: TABLE DATA; Schema: public; Owner: rebrain_admin
--

COPY public.courses (course_id, coursename, tasks_count, price) FROM stdin;
\.


--
-- Data for Name: logs; Type: TABLE DATA; Schema: public; Owner: rebrain_admin
--

COPY public.logs (text, added) FROM stdin;
Add new user vasia	2021-04-04 13:42:26.260226
rebrain_admin	2021-04-04 13:53:54.980273
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: rebrain_admin
--

COPY public.users (user_id, username, email, mobile_phone, firstname, lastname, city, is_curator, record_date) FROM stdin;
1	admin	vasiliy_ozerov@mail.com	+79111937483	Vasiliy	Ozerov	Moscow	t	2021-03-07 17:44:54.168128
2	pricex	SimonWels@mail.com	+79111974384	Simon	Wels	London	f	2021-03-07 17:45:18.119668
6	vozilla	Maxxx@mail.ru	+79111047854	Max	Visikov	\N	f	2021-04-04 11:03:56.965715
7	Kisa007	Kisa007@mail.ru	+79112405972	Raya	Simonova	Tver	f	2021-04-04 11:07:43.774215
8	Kisa00712	Kisa007@mail.ru	+79112405972	Raya	Simonova	Tver	f	2021-04-04 11:15:01.730449
9	yodajedi	magistr_yoda@oldrepublic.com	+79114326786	Yoda	Yodin	Dagoba	f	2021-04-04 13:16:54.099017
12	stock	fuck03@yandex.ru	+79110983475	Sabur	Gogloev	Kazan	f	2021-04-04 19:53:56.59149
\.


--
-- Data for Name: users__courses; Type: TABLE DATA; Schema: public; Owner: rebrain_admin
--

COPY public.users__courses (id, user_id, course_id) FROM stdin;
\.


--
-- Data for Name: users_test; Type: TABLE DATA; Schema: public; Owner: rebrain_admin
--

COPY public.users_test (name) FROM stdin;
vasia
peter
\.


--
-- Name: auditlog_id_seq; Type: SEQUENCE SET; Schema: public; Owner: rebrain_admin
--

SELECT pg_catalog.setval('public.auditlog_id_seq', 1, true);


--
-- Name: courses_course_id_seq; Type: SEQUENCE SET; Schema: public; Owner: rebrain_admin
--

SELECT pg_catalog.setval('public.courses_course_id_seq', 1, false);


--
-- Name: users__courses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: rebrain_admin
--

SELECT pg_catalog.setval('public.users__courses_id_seq', 1, false);


--
-- Name: users_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: rebrain_admin
--

SELECT pg_catalog.setval('public.users_user_id_seq', 12, true);


--
-- Name: auditlog auditlog_pkey; Type: CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.auditlog
    ADD CONSTRAINT auditlog_pkey PRIMARY KEY (id);


--
-- Name: courses courses_pkey; Type: CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.courses
    ADD CONSTRAINT courses_pkey PRIMARY KEY (course_id);


--
-- Name: users__courses users__courses_pkey; Type: CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.users__courses
    ADD CONSTRAINT users__courses_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


--
-- Name: users t_user; Type: TRIGGER; Schema: public; Owner: rebrain_admin
--

CREATE TRIGGER t_user AFTER INSERT OR DELETE OR UPDATE ON public.users FOR EACH ROW EXECUTE FUNCTION public.add_to_log();


--
-- Name: users__courses fk_course_id; Type: FK CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.users__courses
    ADD CONSTRAINT fk_course_id FOREIGN KEY (course_id) REFERENCES public.courses(course_id);


--
-- Name: users__courses fk_user_id; Type: FK CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.users__courses
    ADD CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES public.users(user_id);


--
-- Name: auditlog fk_users_id; Type: FK CONSTRAINT; Schema: public; Owner: rebrain_admin
--

ALTER TABLE ONLY public.auditlog
    ADD CONSTRAINT fk_users_id FOREIGN KEY (user_id) REFERENCES public.users(user_id);


--
-- PostgreSQL database dump complete
--


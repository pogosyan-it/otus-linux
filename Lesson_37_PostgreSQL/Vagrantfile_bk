# -*- mode: ruby -*-
# vim: set ft=ruby :

home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :"db-master" => {
        :box_name => "bento/oracle-8.3",
        :ip_addr => '192.168.11.181',
        :disks => {
                :sata1 => {
                        :dfile => 'home + /VirtualBox VMs/Postgre_hdd/sata1.vdi',
                        :size => 10000,
                        :port => 1
                },
                :sata2 => {
                        :dfile => 'home + /VirtualBox VMs/Postgre_hdd/sata2.vdi',
                        :size => 25000, # Megabytes
                        :port => 2
                },
                 :sata3 => {
                        :dfile => 'home + /VirtualBox VMs/Postgre_hdd/sata3.vdi',
                        :size => 25000, # Megabytes
                        :port => 3
                }
                
        }


  },
  :"db-slave" => {
        :box_name => "bento/oracle-8.3",
        :ip_addr => '192.168.11.182',
        :disks => {
                :sata1 => {
                        :dfile => 'home + /VirtualBox VMs/Postgre_hdd/sata4.vdi',
                        :size => 10000,
                        :port => 1
                },
                :sata2 => {
                        :dfile => 'home + /VirtualBox VMs/Postgre_hdd/sata5.vdi',
                        :size => 25000, # Megabytes
                        :port => 2
                },
                :sata3 => {
                        :dfile => 'home + /VirtualBox VMs/Postgre_hdd/sata6.vdi',
                        :size => 25000, # Megabytes
                        :port => 3
                }
        }


  },
}
Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "1024"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata", '--portcount', 3 ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
	      yum install -y mdadm smartmontools hdparm gdisk
              #bash ~vagrant/test.sh
  	  SHELL
          #config.vm.provision :shell, path: "../raid10_up.sh", run: 'always' 
      end
  end
end

